(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{116:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return b}));var i=n(1),a=n(6),r=(n(0),n(140)),o=n(142),s={title:"Responsive style \ud83d\udc57"},c={id:"usage/responsive-style",title:"Responsive style \ud83d\udc57",description:'import useBaseUrl from "@docusaurus/useBaseUrl";\r',source:"@site/docs\\usage\\responsive-style.mdx",permalink:"/muuri-react/docs/usage/responsive-style",editUrl:"https://github.com/paol-imi/muuri-react/edit/master/website/docs/usage/responsive-style.mdx",sidebar:"someSidebar",previous:{title:"Items dimensions",permalink:"/muuri-react/docs/usage/items-dimensions"},next:{title:"Server side rendering \ud83d\udda5",permalink:"/muuri-react/docs/usage/server-side-rendering"}},l=[{value:"Utility: getResponsiveStyle \ud83d\udce6",id:"utility-getresponsivestyle-",children:[]},{value:"Utility: getStaticStyle \ud83d\udce6",id:"utility-getstaticstyle-",children:[]},{value:"Examples \ud83d\udcd6",id:"examples-",children:[]},{value:"Gotchas: overflow \u26a0\ufe0f",id:"gotchas-overflow-\ufe0f",children:[{value:"Simple solution \u2705",id:"simple-solution-",children:[]}]}],p={rightToc:l};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(r.b)("wrapper",Object(i.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Thanks to the Muuri layout engine, you can create any type of ",Object(r.b)("inlineCode",{parentName:"p"},"layout")," and size the Items as desired simply by setting the CSS style ",Object(r.b)("em",{parentName:"p"},"(width, height, margin and padding)"),"."),Object(r.b)("div",null,Object(r.b)("img",{src:Object(o.a)("gifs/dashboard.gif"),style:{width:"45%"}}),Object(r.b)("img",{style:{width:"4%"}}),Object(r.b)("img",{src:Object(o.a)("gifs/mediaquery.gif"),style:{width:"44%",paddingBottom:"1%"}})),Object(r.b)("p",null,"A very common case is to use the MuuriComponent as a ",Object(r.b)("inlineCode",{parentName:"p"},"grid")," divided into equal cells, and to position each Item in one or more cells. The implementation would be very simple:"),Object(r.b)("div",{className:"admonition admonition-info alert alert--info"},Object(r.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(i.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(i.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(i.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(r.b)("div",Object(i.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"If you need ",Object(r.b)("inlineCode",{parentName:"p"},"4 columns"),", and an Item on each column, just use ",Object(r.b)("inlineCode",{parentName:"p"},"width: 25%;")," in the style of the Items. Very simple and effective."))),Object(r.b)("p",null,"If you want to create more dynamic styles by managing them directly in the component, Muuri-react provides two extremely simple ",Object(r.b)("inlineCode",{parentName:"p"},"utilities")," to generate the style of the Items in these cases."),Object(r.b)("h2",{id:"utility-getresponsivestyle-"},"Utility: getResponsiveStyle \ud83d\udce6"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-js"}),'import { getResponsiveStyle } from "muuri-react";\n')),Object(r.b)("p",null,"With this utility you can virtually divide the MuuriComponent into ",Object(r.b)("inlineCode",{parentName:"p"},"columns")," and set the Item to be as wide as ",Object(r.b)("inlineCode",{parentName:"p"},"n")," of these columns. In addition you can also set the ",Object(r.b)("strong",{parentName:"p"},"margin")," ",Object(r.b)("em",{parentName:"p"},"(static or dynamic)"),", the ",Object(r.b)("strong",{parentName:"p"},"ratio")," ",Object(r.b)("em",{parentName:"p"},"(dynamic)")," between width and height or the ",Object(r.b)("strong",{parentName:"p"},"height")," ",Object(r.b)("em",{parentName:"p"},"(static)"),"."),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-js"}),'// The responsive style.\nconst responsiveStyle = getResponsiveStyle({\n  // The Muuri component is virtually divided into 8 columns,\n  // the width of the item will be 3 columns (minus the margin).\n  column: 3 / 8,\n  // The margin of the item, it can be any CSS values\n  // valid for the margin expressed in "px" or "%".\n  margin: "5%",\n  // The width/height ratio. If you want to set a static\n  // height just set "height" option in px and remove the "ratio".\n  ratio: 1.5\n});\n')),Object(r.b)("p",null,"So you just need to apply the style. The inner element must have ",Object(r.b)("inlineCode",{parentName:"p"},"position: absolute;"),"."),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-jsx"}),'// The Item component.\nconst Item = ({ text }) => (\n  <div style={responsiveStyle}>\n    <div\n      style={{\n        position: "absolute",\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      }}\n    >\n      I\'m an item.\n    </div>\n  </div>\n);\n')),Object(r.b)("p",null,"The utility does not take into account the ",Object(r.b)("strong",{parentName:"p"},"border")," for the outer element, you can use the border in a ",Object(r.b)("strong",{parentName:"p"},"descending")," element (or change ",Object(r.b)("a",Object(i.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing"}),"box-sizing"),")."),Object(r.b)("h2",{id:"utility-getstaticstyle-"},"Utility: getStaticStyle \ud83d\udce6"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-js"}),'import { getStaticStyle } from "muuri-react";\n')),Object(r.b)("p",null,"When ",Object(r.b)("inlineCode",{parentName:"p"},"dragging")," an Item with dimensions relative to the MuuriComponent (e.g. width: 50%) the ",Object(r.b)("inlineCode",{parentName:"p"},"dragFixed")," prop is used to fix its dimensions (see more ",Object(r.b)("a",Object(i.a)({parentName:"p"},{href:"../usage/items-dimensions?id=drag-%E2%9C%8B"}),"here"),")."),Object(r.b)("p",null,"This utility offers more ",Object(r.b)("inlineCode",{parentName:"p"},"flexibility")," than dragFixed and can be useful in cases where the Item has to be dragged between different MuuriComponents and assume different ",Object(r.b)("inlineCode",{parentName:"p"},"sizes")," (as in the gif)."),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-jsx"}),'// The Item component.\nconst Item = () => {\n  // Get the Muuri instance.\n  const { grid } = useGrid();\n  // If the item is dragging.\n  const isDragging = useDrag();\n\n  // Item dimensions.\n  const column = 3 / 8;\n  const margin = "5%";\n  const ratio = 1.5;\n\n  // If the item is dragging the style\n  // has to be static.\n  const style = !isDragging\n    ? getResponsiveStyle({ column, margin, ratio })\n    : getStaticStyle({ grid, column, margin, ratio });\n\n  return (\n    <div style={style}>\n      <div className="item-content" />\n    </div>\n  );\n};\n')),Object(r.b)("h2",{id:"examples-"},"Examples \ud83d\udcd6"),Object(r.b)("p",null,"Check the ",Object(r.b)("a",Object(i.a)({parentName:"p"},{href:"https://codesandbox.io/s/muuri-react-media-query-q6sy6"}),"media query")," example and the ",Object(r.b)("a",Object(i.a)({parentName:"p"},{href:"https://codesandbox.io/s/muuri-react-dashboard-penbe"}),"dashboard")," example on codesandbox."),Object(r.b)("h2",{id:"gotchas-overflow-\ufe0f"},"Gotchas: overflow \u26a0\ufe0f"),Object(r.b)("p",null,"Let's say you have a ",Object(r.b)("inlineCode",{parentName:"p"},"overflow-y: auto;")," element, which you use as a scroll container. In The MuuriComponent the Items have the same size, ",Object(r.b)("inlineCode",{parentName:"p"},"width: 25%;"),". In each row there should be ",Object(r.b)("strong",{parentName:"p"},"4")," Items."),Object(r.b)("p",null,"When the app starts, this happens:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"The MuuriComponent is ",Object(r.b)("strong",{parentName:"li"},"initially")," 100px wide, the Items will be 25px wide."),Object(r.b)("li",{parentName:"ul"},"The Items are many and the MuuriComponent do not fit in the container, the ",Object(r.b)("strong",{parentName:"li"},"scrollbar")," appears."),Object(r.b)("li",{parentName:"ul"},"The width of the MuuriComponent ",Object(r.b)("strong",{parentName:"li"},"decreases")," because of the scrollbar, let's say about 90px."),Object(r.b)("li",{parentName:"ul"},"The CSS engine does ",Object(r.b)("strong",{parentName:"li"},"NOT")," update the Items size which remain at 25px, causing an unwanted layout.")),Object(r.b)("p",null,"The size of the Items will be updated (by the CSS engine) to 22.5px only after a window ",Object(r.b)("strong",{parentName:"p"},"resizing event"),". This problem occurs when relative sizes are used (e.g. ",Object(r.b)("inlineCode",{parentName:"p"},"width: 25%;"),") and the scrollbar ",Object(r.b)("strong",{parentName:"p"},"appears / disappears"),"."),Object(r.b)("h3",{id:"simple-solution-"},"Simple solution \u2705"),Object(r.b)("p",null,"To solve the problem simply use ",Object(r.b)("inlineCode",{parentName:"p"},"overflox-y: scroll"),", to make the scroll bar fixed."))}b.isMDXComponent=!0},140:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return d}));var i=n(0),a=n.n(i);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),p=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s({},t,{},e)),n},b=function(e){var t=p(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=Object(i.forwardRef)((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),b=p(n),u=i,d=b["".concat(o,".").concat(u)]||b[u]||m[u]||r;return n?a.a.createElement(d,s({ref:t},l,{components:n})):a.a.createElement(d,s({ref:t},l))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var l=2;l<r;l++)o[l]=n[l];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},141:function(e,t,n){"use strict";var i=n(0),a=n(35);t.a=function(){return Object(i.useContext)(a.a)}},142:function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var i=n(141);function a(e){const{siteConfig:t}=Object(i.a)(),{baseUrl:n="/"}=t||{};if(!e)return e;return/^(https?:|\/\/)/.test(e)?e:e.startsWith("/")?n+e.slice(1):n+e}}}]);