(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{125:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return r})),a.d(t,"metadata",(function(){return b})),a.d(t,"rightToc",(function(){return o})),a.d(t,"default",(function(){return u}));var n=a(1),l=a(6),i=(a(0),a(143)),r={title:"MuuriComponent API"},b={id:"api-reference/muuricomponent",title:"MuuriComponent API",description:"# Props",source:"@site/docs\\api-reference\\muuricomponent.mdx",permalink:"/muuri-react/docs/api-reference/muuricomponent",editUrl:"https://github.com/paol-imi/muuri-react/edit/master/website/docs/api-reference/muuricomponent.mdx",sidebar:"someSidebar",previous:{title:"useVisibility",permalink:"/muuri-react/docs/hooks/useVisibility"},next:{title:"Hooks API",permalink:"/muuri-react/docs/api-reference/hooks"}},o=[{value:"Interaction props \u2699\ufe0f",id:"interaction-props-\ufe0f",children:[{value:"ref",id:"ref",children:[]},{value:"id",id:"id",children:[]},{value:"groupIds",id:"groupids",children:[]},{value:"gridProps",id:"gridprops",children:[]},{value:"dragEnabled",id:"dragenabled",children:[]},{value:"filter",id:"filter",children:[]},{value:"sort",id:"sort",children:[]},{value:"sortOptions",id:"sortoptions",children:[]},{value:"addOptions",id:"addoptions",children:[]},{value:"propsToData",id:"propstodata",children:[]},{value:"forceSync",id:"forcesync",children:[]},{value:"instantLayout",id:"instantlayout",children:[]}]},{value:"Layout props \u2699\ufe0f",id:"layout-props-\ufe0f",children:[{value:"Default values",id:"default-values",children:[]},{value:"showDuration",id:"showduration",children:[]},{value:"showEasing",id:"showeasing",children:[]},{value:"hideDuration",id:"hideduration",children:[]},{value:"hideEasing",id:"hideeasing",children:[]},{value:"visibleStyles",id:"visiblestyles",children:[]},{value:"hiddenStyles",id:"hiddenstyles",children:[]},{value:"layoutOnResize",id:"layoutonresize",children:[]},{value:"layoutDuration",id:"layoutduration",children:[]},{value:"layoutEasing",id:"layouteasing",children:[]},{value:"dragFixed",id:"dragfixed",children:[]},{value:"dragContainer",id:"dragcontainer",children:[]},{value:"dragHandle",id:"draghandle",children:[]},{value:"dragStartPredicate",id:"dragstartpredicate",children:[]},{value:"dragAxis",id:"dragaxis",children:[]},{value:"dragSort",id:"dragsort",children:[]},{value:"dragSortHeuristics",id:"dragsortheuristics",children:[]},{value:"dragSortPredicate",id:"dragsortpredicate",children:[]},{value:"dragRelease",id:"dragrelease",children:[]},{value:"dragCssProps",id:"dragcssprops",children:[]},{value:"dragPlaceholder",id:"dragplaceholder",children:[]},{value:"containerClass",id:"containerclass",children:[]},{value:"itemClass",id:"itemclass",children:[]},{value:"itemVisibleClass",id:"itemvisibleclass",children:[]},{value:"itemHiddenClass",id:"itemhiddenclass",children:[]},{value:"itemPositioningClass",id:"itempositioningclass",children:[]},{value:"itemDraggingClass",id:"itemdraggingclass",children:[]},{value:"itemReleasingClass",id:"itemreleasingclass",children:[]},{value:"itemPlaceholderClass",id:"itemplaceholderclass",children:[]}]},{value:"Event props \u2699\ufe0f",id:"event-props-\ufe0f",children:[{value:"onSend",id:"onsend",children:[]},{value:"onDragStart",id:"ondragstart",children:[]},{value:"onDragEnd",id:"ondragend",children:[]},{value:"onFilter",id:"onfilter",children:[]},{value:"onSort",id:"onsort",children:[]},{value:"onMount",id:"onmount",children:[]},{value:"onUnmount",id:"onunmount",children:[]}]}],c={rightToc:o};function u(e){var t=e.components,a=Object(l.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"props"},"Props"),Object(i.b)("p",null,"In this ",Object(i.b)("inlineCode",{parentName:"p"},"documentation")," the props of the MuuriComponent are grouped into three categories in order to clarify their usefulness."),Object(i.b)("h2",{id:"interaction-props-\ufe0f"},"Interaction props \u2699\ufe0f"),Object(i.b)("p",null,"These are the props to use to ",Object(i.b)("inlineCode",{parentName:"p"},"interact")," with the functionality of the MuuriComponent."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#ref"}),"ref")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#id"}),"id")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#groupids"}),"groupIds")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#gridprops"}),"gridProps")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#dragenabled"}),"dragEnabled")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#filter"}),"filter")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#sort"}),"sort")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#sortoptions"}),"sortOptions")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#addoptions"}),"addOptions")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#layoutonresize"}),"propsToData")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#forcesync"}),"forceSync")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#instantlayout"}),"instantLayout"))),Object(i.b)("hr",null),Object(i.b)("h3",{id:"ref"},"ref"),Object(i.b)("p",null,"The ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://reactjsx.org/docs/refs-and-the-dom.html"}),"ref")," for the ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/haltu/muuri"}),"Muuri")," instance used inside the MuuriComponent. See more ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"../usage/muuri"}),"here"),"."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Accepted types: ",Object(i.b)("inlineCode",{parentName:"li"},"React.RefObject"),", ",Object(i.b)("inlineCode",{parentName:"li"},"function"),".")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"const muuriRef = useRef();\n\n<MuuriComponent ref={muuriRef} />;\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"<MuuriComponent ref={function (grid) {}} />\n")),Object(i.b)("h3",{id:"id"},"id"),Object(i.b)("p",null,"The id of the MuuriComponent."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Accepted types: ",Object(i.b)("inlineCode",{parentName:"li"},"string"),".")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'<MuuriComponent id={"id"} />\n')),Object(i.b)("h3",{id:"groupids"},"groupIds"),Object(i.b)("p",null,"The ids of the ",Object(i.b)("em",{parentName:"p"},"virtual")," groups to which the MuuriComponent belongs, it is possible to change them in any render. This option is used ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"#dragsort"}),"here"),"."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Accepted types: ",Object(i.b)("inlineCode",{parentName:"li"},"string[]"),".")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'<MuuriComponent groupIds={["GroupA", "GroupB"]} />\n')),Object(i.b)("h3",{id:"gridprops"},"gridProps"),Object(i.b)("p",null,"The props of the DOM element generated by the MuuriComponent."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Accepted types: ",Object(i.b)("inlineCode",{parentName:"li"},"object"),".")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'<MuuriComponent gridProps={{ className: "grid" }} />\n')),Object(i.b)("h3",{id:"dragenabled"},"dragEnabled"),Object(i.b)("p",null,"Should Items be draggable?"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"false"),"."),Object(i.b)("li",{parentName:"ul"},"Accepted types: boolean.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"<MuuriComponent dragEnabled={true} />\n")),Object(i.b)("h3",{id:"filter"},"filter"),Object(i.b)("p",null,"The filter function is executed for every Item in the instance. If the return value of the predicate is truthy the Item in question will be shown and otherwise hidden. The function receives the ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"../usage/items-data.md"}),"data")," of the Item as its argument. ",Object(i.b)("br",null),"\nRemember to provide a memoized value to avoid useless re-filtering (as the component will re-filter each time the value change). See more ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"../usage/filtering"}),"here"),"."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Accepted types: ",Object(i.b)("inlineCode",{parentName:"li"},"function"),".")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'const filter = useCallback((itemData) => {\n  // Show only the items that respect the condition.\n  return itemData.someData === "someValue";\n}, []);\n\n<MuuriComponent filter={filter} />;\n')),Object(i.b)("h3",{id:"sort"},"sort"),Object(i.b)("p",null,"There are two ways to sort the Items based on their data. The first is simply by providing a function as the comparer, which will receive the ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"../usage/items-data"}),"data")," of two Items to compare as arguments. It works almost identically to native array sort, the only difference is that the sort is always stable. Alternatively you can sort by the ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"../usage/items-data"}),"data")," you have provided for the Items. Just provide the data key(s) as a string (separated by space) and the Items will be sorted based on the provided data keys. ",Object(i.b)("br",null),"\nIf you are using a function, remember to provide a memoized value to avoid useless re-sorting (as the component will re-sort each time the value change). There are two other ways that are not based on data, the first is to provide an ordered list of Items ",Object(i.b)("inlineCode",{parentName:"p"},"keys"),", or to use a ",Object(i.b)("inlineCode",{parentName:"p"},"Token")," that represents a sorting of the Items at a specific time. See more ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"../usage/sorting"}),"here"),"."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Accepted types: ",Object(i.b)("inlineCode",{parentName:"li"},"string"),", ",Object(i.b)("inlineCode",{parentName:"li"},"function"),", ",Object(i.b)("inlineCode",{parentName:"li"},"array"),".")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"const sort = useCallback((dataItemA, dataItemB) => {\n  // Sort by id.\n  return dataItemA.id - dataItemB.id;\n}, []);\n\n<MuuriComponent propsToData={({ id }) => ({ id })} sort={sort} />;\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'<MuuriComponent\n  propsToData={({ id, tag }) => ({ id, tag })}\n  // Sort by id and by tag.\n  sort={"id tag"}\n/>\n')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'<MuuriComponent\n  propsToData={({ id, tag }) => ({ id, tag })}\n  // Sort some keys ascending and some keys descending.\n  sort={"id tag:desc"}\n/>\n')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'const [sort] = useState(["2", "1"]);\n\n<MuuriComponent sort={sort}>\n  <Item key={"1"} />\n  <Item key={"2"} />\n</MuuriComponent>;\n')),Object(i.b)("h3",{id:"sortoptions"},"sortOptions"),Object(i.b)("p",null,"With this options you can change the sorting order (default ascending). ",Object(i.b)("br",null),"\nRemember to provide a memoized value to avoid useless re-sorting (as the component will re-sort each time the value change)."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Accepted types: ",Object(i.b)("inlineCode",{parentName:"li"},"object"),"."),Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"{ descending: false }"))),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'const [sort] = useState({\n  value: "id",\n  options: { descending: true }\n});\n\n<MuuriComponent sort={sort.value} sortOptions={sort.options} />;\n')),Object(i.b)("h3",{id:"addoptions"},"addOptions"),Object(i.b)("p",null,"With this options you can decide how the MuuriComponent will manage the new Items added with the CSS display property set to ",Object(i.b)("inlineCode",{parentName:"p"},"none"),", If show is true the Item will be added with a showing animation, otherwise the Item will be hidden. Note that if the filter props is set it takes precedence over the decision of which Items are visible or not."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Accepted types: ",Object(i.b)("inlineCode",{parentName:"li"},"object"),"."),Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"{ show: true }"))),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"<MuuriComponent addOptions={{ show: false }} />\n")),Object(i.b)("h3",{id:"propstodata"},"propsToData"),Object(i.b)("p",null,"The function is executed for each Item in the instance. The returned object will represent the data of the Item in question. The function receives the props of the Item as its argument. See more ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"../usage/items-data"}),"here"),"."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Accepted types: ",Object(i.b)("inlineCode",{parentName:"li"},"function"),".")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"const items = [{ id: 1 }, { id: 2 }];\nconst children = items.map(({ id }) => <Item id={id} />);\n\n// The id prop will be used as data.\n<MuuriComponent propsToData={({ id }) => ({ id })}>{children}</MuuriComponent>;\n")),Object(i.b)("h3",{id:"forcesync"},"forceSync"),Object(i.b)("p",null,"Sorting and filtering are not reapplied with a new rendering if their value does not change. If forceSync is true, they will be reapplied even if their values \u200b\u200bhave not changed."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Accepted types: ",Object(i.b)("inlineCode",{parentName:"li"},"boolean"),"."),Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"false"))),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"<MuuriComponent forceSync />\n")),Object(i.b)("h3",{id:"instantlayout"},"instantLayout"),Object(i.b)("p",null,"If true the Items will be positioned instantly without any animation."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Accepted types: ",Object(i.b)("inlineCode",{parentName:"li"},"boolean"),"."),Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"false"))),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"<MuuriComponent instantLayout />\n")),Object(i.b)("h2",{id:"layout-props-\ufe0f"},"Layout props \u2699\ufe0f"),Object(i.b)("p",null,"These are the props that determine how the MuuriComponent will ",Object(i.b)("inlineCode",{parentName:"p"},"work"),", from layout up to the speed of animations. These props can only be chosen when the component is mounted, modifying them in subsequent renders will have no effect."),Object(i.b)("h3",{id:"default-values"},"Default values"),Object(i.b)("p",null,"The default options are stored in ",Object(i.b)("inlineCode",{parentName:"p"},"MuuriComponent.defaultProps")," object, which in it's default state contains the following configuration:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'<MuuriComponent\n  // Default show animation.\n  showDuration={300}\n  showEasing={"ease"}\n  // Default hide animation.\n  hideDuration={300}\n  hideEasing={"ease"}\n  // Item\'s visible/hidden state styles.\n  visibleStyles={{\n    opacity: "1",\n    transform: "scale(1)"\n  }}\n  hiddenStyles={{\n    opacity: "0",\n    transform: "scale(0.5)"\n  }}\n  // Layout.\n  layout={{\n    fillGaps: false,\n    horizontal: false,\n    alignRight: false,\n    alignBottom: false,\n    rounding: true\n  }}\n  layoutOnResize={100}\n  layoutDuration={300}\n  layoutEasing={"ease"}\n  // Drag & Drop.\n  dragContainer={null}\n  dragHandle={null}\n  dragFixed={false}\n  dragStartPredicate={{\n    distance: 0,\n    delay: 0,\n    handle: false\n  }}\n  dragAxis={null}\n  dragSort={true}\n  dragSortHeuristics={{\n    sortInterval: 100,\n    minDragDistance: 10,\n    minBounceBackAngle: 1\n  }}\n  dragSortPredicate={{\n    threshold: 50,\n    action: "move",\n    migrateAction: "move"\n  }}\n  dragRelease={{\n    duration: 300,\n    easing: "ease",\n    useDragContainer: true\n  }}\n  dragCssProps={{\n    touchAction: "none",\n    userSelect: "none",\n    userDrag: "none",\n    tapHighlightColor: "rgba(0, 0, 0, 0)",\n    touchCallout: "none",\n    contentZooming: "none"\n  }}\n  dragPlaceholder={{\n    enabled: false,\n    createElement: null,\n    onCreate: null,\n    onRemove: null\n  }}\n  // Classnames.\n  containerClass={"muuri"}\n  itemClass={"muuri-item"}\n  itemVisibleClass={"muuri-item-shown"}\n  itemHiddenClass={"muuri-item-hidden"}\n  itemPositioningClass={"muuri-item-positioning"}\n  itemDraggingClass={"muuri-item-dragging"}\n  itemReleasingClass={"muuri-item-releasing"}\n  itemPlaceholderClass={"muuri-item-placeholder"}\n/>\n')),Object(i.b)("p",null,"You can modify the default options easily:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'MuuriComponent.defaultOptions.showDuration = 400;\nMuuriComponent.defaultOptions.dragSortPredicate.action = "swap";\n')),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#showduration"}),"showDuration")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#showeasing"}),"showEasing")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#hideduration"}),"hideDuration")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#hideeasing"}),"hideEasing")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#visiblestyles"}),"visibleStyles")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#hiddenstyles"}),"hiddenStyles")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#layoutonresize"}),"layoutOnResize")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#layoutduration"}),"layoutDuration")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#layouteasing"}),"layoutEasing")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#dragFixed"}),"dragFixed")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#dragcontainer"}),"dragContainer")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#dragHandle"}),"dragHandle")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#dragstartpredicate"}),"dragStartPredicate")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#dragaxis"}),"dragAxis")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#dragsort"}),"dragSort")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#dragsortheuristics"}),"dragSortHeuristics")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#dragsortpredicate"}),"dragSortPredicate")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#dragrelease"}),"dragRelease")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#dragcssprops"}),"dragCssProps")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#dragplaceholder"}),"dragPlaceholder")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#containerclass"}),"containerClass")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#itemclass"}),"itemClass")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#itemvisibleclass"}),"itemVisibleClass")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#itemhiddenclass"}),"itemHiddenClass")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#itempositioningclass"}),"itemPositioningClass")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#itemdraggingclass"}),"itemDraggingClass")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#itemreleasingclass"}),"itemReleasingClass")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#itemplaceholderclass"}),"itemPlaceholderClass"))),Object(i.b)("hr",null),Object(i.b)("h3",{id:"showduration"},"showDuration"),Object(i.b)("p",null,"Show animation duration in milliseconds. Set to ",Object(i.b)("inlineCode",{parentName:"p"},"0")," to disable show animation."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"300"),"."),Object(i.b)("li",{parentName:"ul"},"Accepted types: number.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"<MuuriComponent showDuration={600} />\n")),Object(i.b)("h3",{id:"showeasing"},"showEasing"),Object(i.b)("p",null,"Show animation easing. Accepts any valid ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/AnimationEffectTimingProperties/easing"}),"Animation easing")," value."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"'ease'"),"."),Object(i.b)("li",{parentName:"ul"},"Accepted types: string.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'<MuuriComponent showEasing={"cubic-bezier(0.215, 0.61, 0.355, 1)"} />\n')),Object(i.b)("h3",{id:"hideduration"},"hideDuration"),Object(i.b)("p",null,"Hide animation duration in milliseconds. Set to ",Object(i.b)("inlineCode",{parentName:"p"},"0")," to disable hide animation."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"300"),"."),Object(i.b)("li",{parentName:"ul"},"Accepted types: number.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"<MuuriComponent hideDuration={600} />\n")),Object(i.b)("h3",{id:"hideeasing"},"hideEasing"),Object(i.b)("p",null,"Hide animation easing. Accepts any valid ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/AnimationEffectTimingProperties/easing"}),"Animation easing")," value."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"'ease'"),"."),Object(i.b)("li",{parentName:"ul"},"Accepted types: string.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'<MuuriComponent hideEasing={"cubic-bezier(0.215, 0.61, 0.355, 1)"} />\n')),Object(i.b)("h3",{id:"visiblestyles"},"visibleStyles"),Object(i.b)("p",null,"The styles that will be applied to all visible Items. These styles are also used for the show/hide animations which means that you have to have the same style properties in visibleStyles and hiddenStyles options. Be sure to define all style properties camel cased."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"{opacity: 1, transform: 'scale(1)'}"),"."),Object(i.b)("li",{parentName:"ul"},"Accepted types: object.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'<MuuriComponent\n  visibleStyles={{\n    opacity: 1,\n    transform: "rotate(45deg)"\n  }}\n  hiddenStyles={{\n    opacity: 0,\n    transform: "rotate(-45deg)"\n  }}\n/>\n')),Object(i.b)("h3",{id:"hiddenstyles"},"hiddenStyles"),Object(i.b)("p",null,"The styles that will be applied to all hidden Items. These styles are also used for the show/hide animations which means that you have to have the same style properties in visibleStyles and hiddenStyles options. Be sure to define all style properties camel cased."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"{opacity: 0, transform: 'scale(0.5)'}"),"."),Object(i.b)("li",{parentName:"ul"},"Accepted types: object.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'<MuuriComponent\n  visibleStyles={{\n    opacity: 1,\n    transform: "rotate(45deg)"\n  }}\n  hiddenStyles={{\n    opacity: 0,\n    transform: "rotate(-45deg)"\n  }}\n/>\n')),Object(i.b)("h3",{id:"layoutonresize"},"layoutOnResize"),Object(i.b)("p",null,"Should Muuri automatically trigger ",Object(i.b)("inlineCode",{parentName:"p"},"layout")," method on window resize? Set to ",Object(i.b)("inlineCode",{parentName:"p"},"false")," to disable. When a number or ",Object(i.b)("inlineCode",{parentName:"p"},"true")," is provided Muuri will automatically position the Items every time window is resized. The provided number (",Object(i.b)("inlineCode",{parentName:"p"},"true")," is transformed to ",Object(i.b)("inlineCode",{parentName:"p"},"0"),") equals to the amount of time (in milliseconds) that is waited before Items are positioned after each window resize event."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"150"),"."),Object(i.b)("li",{parentName:"ul"},"Accepted types: boolean, number.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"// No layout on resize.\n<MuuriComponent\n  layoutOnResize={false}\n>\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"// Layout on resize (instantly).\n<MuuriComponent\n  layoutOnResize\n>\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"// Layout on resize (with 200ms debounce).\n<MuuriComponent\n  layoutOnResize={200}\n>\n")),Object(i.b)("h3",{id:"layoutduration"},"layoutDuration"),Object(i.b)("p",null,"The duration for Item's layout animation in milliseconds. Set to ",Object(i.b)("inlineCode",{parentName:"p"},"0")," to disable."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"300"),"."),Object(i.b)("li",{parentName:"ul"},"Accepted types: number.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"<MuuriComponent layoutDuration={600} />\n")),Object(i.b)("h3",{id:"layouteasing"},"layoutEasing"),Object(i.b)("p",null,"The easing for Item's layout animation. Accepts any valid ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/AnimationEffectTimingProperties/easing"}),"Animation easing")," value."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"'ease'"),"."),Object(i.b)("li",{parentName:"ul"},"Accepted types: string.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'<MuuriComponent layoutEasing={"cubic-bezier(0.215, 0.61, 0.355, 1)"} />\n')),Object(i.b)("h3",{id:"dragfixed"},"dragFixed"),Object(i.b)("p",null,"Should the CSS width, height and padding-top properties of the element be temporarily fixed when dragging? See more ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"../usage/items-dimensions#dimensions-when-dragging-"}),"here"),"."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"false"),"."),Object(i.b)("li",{parentName:"ul"},"Accepted types: boolean.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"<MuuriComponent dragFixed />\n")),Object(i.b)("h3",{id:"dragcontainer"},"dragContainer"),Object(i.b)("p",null,"The element (or its ref) the dragged Item should be appended to for the duration of the drag. If set to ",Object(i.b)("inlineCode",{parentName:"p"},"null")," (which is also the default value) the MuuriComponent element will be used."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"null"),"."),Object(i.b)("li",{parentName:"ul"},"Accepted types: React.RefObject, element, null.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"<MuuriComponent dragContainer={document.body} />\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'const ref = useRef();\n\n<div className={"dragContainer"} ref={ref}>\n  <MuuriComponent dragContainer={ref} />\n</div>;\n')),Object(i.b)("h3",{id:"draghandle"},"dragHandle"),Object(i.b)("p",null,"The element within the Item element that should be used as the drag handle. This should be a CSS selector which will be fed to ",Object(i.b)("inlineCode",{parentName:"p"},"element.querySelector()")," as is to obtain the handle element when the Item is instantiated. If no valid element is found or if this is ",Object(i.b)("inlineCode",{parentName:"p"},"null")," Muuri will use the Item element as the handle."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Default value: null."),Object(i.b)("li",{parentName:"ul"},"Accepted types: string, null.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'<MuuriComponent dragHandle={".handle"} />\n')),Object(i.b)("h3",{id:"dragstartpredicate"},"dragStartPredicate"),Object(i.b)("p",null,"A function that determines when the Item should start to move when the Item is being dragged. By default uses the built-in predicate which has some configurable options."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"{distance: 0, delay: 0}"),"."),Object(i.b)("li",{parentName:"ul"},"Accepted types: function, object.")),Object(i.b)("p",null,"If an object is provided the default sort predicate handler will be used. You can define the following properties:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"distance"),"\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"number"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"0"),"."),Object(i.b)("li",{parentName:"ul"},"How many pixels must be dragged before the dragging starts."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"delay"),"\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"number"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"0"),"."),Object(i.b)("li",{parentName:"ul"},"How long (in milliseconds) the user must drag before the dragging starts.")))),Object(i.b)("p",null,"If you provide a function you can totally customize the drag start logic. When the user starts to drag an Item this predicate function will be called until you return ",Object(i.b)("inlineCode",{parentName:"p"},"true")," or ",Object(i.b)("inlineCode",{parentName:"p"},"false"),". If you return ",Object(i.b)("inlineCode",{parentName:"p"},"true")," the Item will begin to move whenever the Item is dragged. If you return ",Object(i.b)("inlineCode",{parentName:"p"},"false")," the Item will not be moved at all. Note that after you have returned ",Object(i.b)("inlineCode",{parentName:"p"},"true")," or ",Object(i.b)("inlineCode",{parentName:"p"},"false")," this function will not be called until the Item is released and dragged again. Remember that you can enable / disable drag and drop for the single Item with the ",Object(i.b)("inlineCode",{parentName:"p"},"useDraggable")," hook."),Object(i.b)("p",null,"The predicate function receives two arguments:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"item"),"\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"Muuri.Item"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"The Item that's being dragged."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"event"),"\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"object"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"The drag event (Muuri.Dragger event).")))),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"// Configure the default predicate.\n<MuuriComponent\n  dragStartPredicate={{\n    distance: 10,\n    delay: 100\n  }}\n/>\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"// Provide your own predicate.\n<MuuriComponent\n  dragStartPredicate={function (item, e) {\n    // Start moving the item after the item has been dragged for one second.\n    if (e.deltaTime > 1000) {\n      return true;\n    }\n  }}\n/>\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"// Provide your own predicate.\n<MuuriComponent\n  dragStartPredicate={function (item, e) {\n    const key = item.getKey();\n    const data = item.getData();\n\n    // Implement your logic...\n  }}\n/>\n")),Object(i.b)("h3",{id:"dragaxis"},"dragAxis"),Object(i.b)("p",null,"Force Items to be moved only vertically or horizontally when dragged. Set to ",Object(i.b)("inlineCode",{parentName:"p"},"'x'")," for horizontal movement and to ",Object(i.b)("inlineCode",{parentName:"p"},"'y'")," for vertical movement. By default Items can be dragged both vertically and horizontally."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"'xy'"),"."),Object(i.b)("li",{parentName:"ul"},"Accepted types: string."),Object(i.b)("li",{parentName:"ul"},"Allowed values: ",Object(i.b)("inlineCode",{parentName:"li"},"'x'"),", ",Object(i.b)("inlineCode",{parentName:"li"},"'y'"),", ",Object(i.b)("inlineCode",{parentName:"li"},"'xy'"),".")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'// Move items only horizontally when dragged.\n<MuuriComponent dragAxis={"x"} />\n')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'// Move items only vertically when dragged.\n<MuuriComponent dragAxis={"y"} />\n')),Object(i.b)("h3",{id:"dragsort"},"dragSort"),Object(i.b)("p",null,"Should the Items be sorted during drag? A simple boolean will do just fine here."),Object(i.b)("p",null,"Alternatively you can do some advanced stuff and control within which MuuriComponents a specific Item can be sorted and dragged into. To do that you can simply provide the groupId of these Muuricomponents. If you want to implement a more complex logic, different for each Item, you can provide a function which receives the dragged Item as its first argument and should return an array of grids. See more ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"../usage/reparenting"}),"here"),"."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"true"),"."),Object(i.b)("li",{parentName:"ul"},"Accepted types: boolean, object, function.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"// Disable drag sorting.\n<MuuriComponent dragSort={false} />\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"// Enable it only in the MuuriComponent parent.\n<MuuriComponent dragSort={true} />\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'// Enable it only among MuuriComponents of a certain group.\n<MuuriComponent groupIds={["GroupA"]} dragSort={{ groupId: "GroupA" }} />\n')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'import { muuriMap } from "muuri-react";\n\n// Custom logic.\n<MuuriComponent\n  id={"id"}\n  groupIds={["groupId"]}\n  dragSort={(item) => {\n    // Dragged component.\n    const key = item.getKey();\n    const data = item.getData();\n\n    // Some Muuri instances.\n    const currentGrid = item.getGrid();\n    const gridsArray = muuriMap.getGroup("groupId");\n    const grid = muuriMap.get("id");\n\n    // Implement your logic...\n    // Return an array of Muuri instances into\n    // which the item can be dragged and sorted.\n\n    return anArrayOfGrids;\n  }}\n/>;\n')),Object(i.b)("h3",{id:"dragsortheuristics"},"dragSortHeuristics"),Object(i.b)("p",null,"Defines various heuristics so that sorting during drag would be smoother and faster."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"{sortInterval: 100, minDragDistance: 10, minBounceBackAngle: 1}"),"."),Object(i.b)("li",{parentName:"ul"},"Accepted types: object.")),Object(i.b)("p",null,"You can define the following properties:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"sortInterval"),"\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"number"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"100"),"."),Object(i.b)("li",{parentName:"ul"},"Defines the amount of time the dragged Item must be still before ",Object(i.b)("inlineCode",{parentName:"li"},"dragSortPredicate")," function is called."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"minDragDistance"),"\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"number"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"10"),"."),Object(i.b)("li",{parentName:"ul"},"Defines how much (in pixels) the Item must be dragged before ",Object(i.b)("inlineCode",{parentName:"li"},"dragSortPredicate")," can be called."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"minBounceBackAngle"),"\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"number"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"1"),"."),Object(i.b)("li",{parentName:"ul"},"Defines the minimum angle (in radians) of the delta vector between the last movement vector and the current movement vector that is required for the dragged Item to be allowed to be sorted to it's previous index. The problem this heuristic is trying to solve is the scenario where you drag an Item over a much bigger Item and the bigger Item moves, but it's still overlapping the dragged Item after repositioning. Now when you move the dragged Item again another sort is triggered and the bigger Item moves back to it's previous position. This bouncing back and forth can go on for quite a while and it looks quite erratic. The fix we do here is that, by default, we disallow an Item to be moved back to it's previous position, unless it's drag direction changes enough. And what is enough? That's what you can define here. Note that this option works in tandem with ",Object(i.b)("inlineCode",{parentName:"li"},"minDragDistance")," and needs it to be set to ",Object(i.b)("inlineCode",{parentName:"li"},"3")," at minimum to be enabled at all.")))),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"<MuuriComponent\n  dragEnabled={true}\n  dragSortHeuristics={{\n    sortInterval: 10,\n    minDragDistance: 5,\n    minBounceBackAngle: Math.PI / 2\n  }}\n/>\n")),Object(i.b)("h3",{id:"dragsortpredicate"},"dragSortPredicate"),Object(i.b)("p",null,"Defines the logic for the sort procedure during dragging an Item."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"{action: 'move', migrateAction: 'move', threshold: 50}"),"."),Object(i.b)("li",{parentName:"ul"},"Accepted types: function, object.")),Object(i.b)("p",null,"If an object is provided the default sort predicate handler will be used. You can define the following properties:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"action"),"\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"string"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"'move'"),"."),Object(i.b)("li",{parentName:"ul"},"Allowed values: ",Object(i.b)("inlineCode",{parentName:"li"},"'move'"),", ",Object(i.b)("inlineCode",{parentName:"li"},"'swap'"),"."),Object(i.b)("li",{parentName:"ul"},"Should the dragged Item be ",Object(i.b)("em",{parentName:"li"},"moved")," to the new position or should it ",Object(i.b)("em",{parentName:"li"},"swap")," places with the Item it overlaps?"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"migrateAction"),"\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"string"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"'move'"),"."),Object(i.b)("li",{parentName:"ul"},"Allowed values: ",Object(i.b)("inlineCode",{parentName:"li"},"'move'"),", ",Object(i.b)("inlineCode",{parentName:"li"},"'swap'"),"."),Object(i.b)("li",{parentName:"ul"},"Should the dragged Item be ",Object(i.b)("em",{parentName:"li"},"moved")," to the new position or should it ",Object(i.b)("em",{parentName:"li"},"swap")," places with the Item it overlaps when the dragged Item is moved to another grid?"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"threshold"),"\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"number"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"50"),"."),Object(i.b)("li",{parentName:"ul"},"Allowed values: ",Object(i.b)("inlineCode",{parentName:"li"},"1")," - ",Object(i.b)("inlineCode",{parentName:"li"},"100"),"."),Object(i.b)("li",{parentName:"ul"},"How many percent the intersection area between the dragged Item and the compared Item should be from the maximum potential intersection area between the Items before sorting is triggered.")))),Object(i.b)("p",null,"Alternatively you can provide your own callback function where you can define your own custom sort logic. The callback function receives two arguments:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"item"),"\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"Muuri.Item"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"The Item that's being dragged."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"event"),"\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"object"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"The drag event (Muuri.Dragger event).")))),Object(i.b)("p",null,"The callback should return a ",Object(i.b)("em",{parentName:"p"},"falsy")," value if sorting should not occur. If, however, sorting should occur the callback should return an object containing the following properties:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"index"),"\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"number"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"The index where the Item should be moved to."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"grid"),"\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"Muuri"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"The grid where the Item should be moved to."),Object(i.b)("li",{parentName:"ul"},"Defaults to the Item's current grid."),Object(i.b)("li",{parentName:"ul"},"Optional."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"action"),"\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"string"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"The movement method."),Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"'move'"),"."),Object(i.b)("li",{parentName:"ul"},"Allowed values: ",Object(i.b)("inlineCode",{parentName:"li"},"'move'")," or ",Object(i.b)("inlineCode",{parentName:"li"},"'swap'"),"."),Object(i.b)("li",{parentName:"ul"},"Optional.")))),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'// Customize the default predicate.\n<MuuriComponent\n  dragSortPredicate={{\n    threshold: 90,\n    action: "swap"\n  }}\n/>\n')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'// Provide your own predicate.\n<MuuriComponent\n  dragSortPredicate={function (item, e) {\n    if (e.deltaTime < 1000) return false;\n    return {\n      index: Math.round(e.deltaTime / 1000) % 2 === 0 ? -1 : 0,\n      action: "swap"\n    };\n  }}\n/>\n')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'import { ItemDrag } from "muuri-react";\n\n// Pro tip: use the default predicate as fallback in your custom predicate.\n<MuuriComponent\n  dragSortPredicate={function (item, e) {\n    if (item.getElement().classList.contains("no-sort")) return false;\n    return ItemDrag.defaultSortPredicate(item, {\n      action: "swap",\n      threshold: 75\n    />\n  }}\n/>\n')),Object(i.b)("h3",{id:"dragrelease"},"dragRelease"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"{ duration: 300, easing: 'ease', useDragContainer: true }"),"."),Object(i.b)("li",{parentName:"ul"},"Accepted types: object.")),Object(i.b)("p",null,"You can define the following properties:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"duration \u2014 ",Object(i.b)("em",{parentName:"li"},"number"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"300"),"."),Object(i.b)("li",{parentName:"ul"},"The duration for Item's drag release animation. Set to ",Object(i.b)("inlineCode",{parentName:"li"},"0")," to disable."))),Object(i.b)("li",{parentName:"ul"},"easing \u2014 string",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"'ease'"),"."),Object(i.b)("li",{parentName:"ul"},"The easing for Item's drag release animation. Accepts any valid ",Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/EffectTiming/easing"}),"Animation easing")," value."))),Object(i.b)("li",{parentName:"ul"},"useDragContainer \u2014 ",Object(i.b)("em",{parentName:"li"},"boolean"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"true"),"."),Object(i.b)("li",{parentName:"ul"},"If ",Object(i.b)("inlineCode",{parentName:"li"},"true")," the Item element will remain within the ",Object(i.b)("inlineCode",{parentName:"li"},"dragContainer")," for the duration of the release process. Otherwise the Item element will be inserted within the grid element (if not already inside it) at the beginning of the release process.")))),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'<MuuriComponent\n  dragRelease={{\n    duration: 600,\n    easing: "ease-out",\n    useDragContainer: false\n  }}\n/>\n')),Object(i.b)("h3",{id:"dragcssprops"},"dragCssProps"),Object(i.b)("p",null,"Drag specific CSS properties that Muuri sets to the draggable Item elements. Muuri automatically prefixes the properties before applying them to the element. ",Object(i.b)("inlineCode",{parentName:"p"},"touchAction")," property is required to be always defined, but the other properties are optional and can be omitted by setting their value to an empty string if you want to e.g. define them via CSS only."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"{touchAction: 'none', userSelect: 'none', userDrag: 'none', tapHighlightColor: 'rgba(0, 0, 0, 0)', touchCallout: 'none', contentZooming: 'none'}"),"."),Object(i.b)("li",{parentName:"ul"},"Accepted types: object.")),Object(i.b)("p",null,"You can define the following properties:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"touchAction"),"\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"string"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"'none'"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action"}),"https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"userSelect"),"\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"string"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"'none'"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/user-select"}),"https://developer.mozilla.org/en-US/docs/Web/CSS/user-select")),Object(i.b)("li",{parentName:"ul"},"Optional."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"userDrag"),"\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"string"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"'none'"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"http://help.dottoro.com/lcbixvwm.php"}),"http://help.dottoro.com/lcbixvwm.php")),Object(i.b)("li",{parentName:"ul"},"Optional."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"tapHighlightColor"),"\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"string"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"'rgba(0, 0, 0, 0)'"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-tap-highlight-color"}),"https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-tap-highlight-color")),Object(i.b)("li",{parentName:"ul"},"Optional."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"touchCallout"),"\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"string"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"'none'"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-touch-callout"}),"https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-touch-callout")),Object(i.b)("li",{parentName:"ul"},"Optional."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"contentZooming"),"\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"string"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"'none'"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/-ms-content-zooming"}),"https://developer.mozilla.org/en-US/docs/Web/CSS/-ms-content-zooming")),Object(i.b)("li",{parentName:"ul"},"Optional.")))),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'// Only set the required touch-action CSS property via the options if you for\n// example want to set the other props via CSS instead.\n<MuuriComponent\n  dragEnabled={true}\n  dragCssProps={{\n    touchAction: "pan-y",\n    userSelect: "",\n    userDrag: "",\n    tapHighlightColor: "",\n    touchCallout: "",\n    contentZooming: ""\n  }}\n/>\n')),Object(i.b)("h3",{id:"dragplaceholder"},"dragPlaceholder"),Object(i.b)("p",null,"If you want a placeholder Item to appear for the duration of an Item's drag & drop procedure you can enable and configure it here. The placeholder animation duration is fetched from the grid's ",Object(i.b)("inlineCode",{parentName:"p"},"layoutDuration")," option and easing from the grid's ",Object(i.b)("inlineCode",{parentName:"p"},"layoutEasing")," option. Note that a special placeholder class is given to all drag placeholders and is customizable via ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"#itemplaceholderclass-"}),"itemPlaceholderClass")," option."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"{enabled: false, createElement: null, onCreate: null, onRemove: null}"),"."),Object(i.b)("li",{parentName:"ul"},"Accepted types: object.")),Object(i.b)("p",null,"You can define the following properties:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"enabled")," ","\xa0","\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"boolean"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"false"),"."),Object(i.b)("li",{parentName:"ul"},"Is the placeholder enabled?"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"createElement")," ","\xa0","\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"function / null"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"null"),"."),Object(i.b)("li",{parentName:"ul"},"If defined, this method will be used to create the DOM element that is used for the placeholder. By default a new ",Object(i.b)("inlineCode",{parentName:"li"},"div")," element is created when a placeholder is summoned."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"onCreate")," ","\xa0","\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"function / null"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"null"),"."),Object(i.b)("li",{parentName:"ul"},"An optional callback that will be called after a placeholder is created for an Item."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"onRemove")," ","\xa0","\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"function / null"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"null"),"."),Object(i.b)("li",{parentName:"ul"},"An optional callback that will be called after a placeholder is removed from the grid.")))),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"<MuuriComponent\n  dragEnabled={true}\n  dragPlaceholder={{\n    enabled: true,\n    createElement: function (item) {\n      return item.getElement().cloneNode(true);\n    }\n  }}\n/>\n")),Object(i.b)("h3",{id:"containerclass"},"containerClass"),Object(i.b)("p",null,"Container element's class name."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"'muuri'"),"."),Object(i.b)("li",{parentName:"ul"},"Accepted types: string.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'<MuuriComponent containerClass={"foo"} />\n')),Object(i.b)("h3",{id:"itemclass"},"itemClass"),Object(i.b)("p",null,"Item element's class name."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"'muuri-item'"),"."),Object(i.b)("li",{parentName:"ul"},"Accepted types: string.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'<MuuriComponent itemClass={"foo-item"} />\n')),Object(i.b)("h3",{id:"itemvisibleclass"},"itemVisibleClass"),Object(i.b)("p",null,"Visible Item's class name."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"'muuri-item-shown'"),"."),Object(i.b)("li",{parentName:"ul"},"Accepted types: string.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'<MuuriComponent itemVisibleClass={"foo-item-shown"} />\n')),Object(i.b)("h3",{id:"itemhiddenclass"},"itemHiddenClass"),Object(i.b)("p",null,"Hidden Item's class name."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"'muuri-item-hidden'"),"."),Object(i.b)("li",{parentName:"ul"},"Accepted types: string.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'<MuuriComponent itemHiddenClass={"foo-item-hidden"} />\n')),Object(i.b)("h3",{id:"itempositioningclass"},"itemPositioningClass"),Object(i.b)("p",null,"This class name will be added to the Item element for the duration of positioning."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"'muuri-item-positioning'"),"."),Object(i.b)("li",{parentName:"ul"},"Accepted types: string.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'<MuuriComponent itemPositioningClass={"foo-item-positioning"} />\n')),Object(i.b)("h3",{id:"itemdraggingclass"},"itemDraggingClass"),Object(i.b)("p",null,"This class name will be added to the Item element for the duration of drag."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"'muuri-item-dragging'"),"."),Object(i.b)("li",{parentName:"ul"},"Accepted types: string.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'<MuuriComponent itemDraggingClass={"foo-item-dragging"} />\n')),Object(i.b)("h3",{id:"itemreleasingclass"},"itemReleasingClass"),Object(i.b)("p",null,"This class name will be added to the Item element for the duration of release."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"'muuri-item-releasing'"),"."),Object(i.b)("li",{parentName:"ul"},"Accepted types: string.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'<MuuriComponent itemReleasingClass={"foo-item-releasing"} />\n')),Object(i.b)("h3",{id:"itemplaceholderclass"},"itemPlaceholderClass"),Object(i.b)("p",null,"This class name will be added to the drag placeholder element."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Default value: ",Object(i.b)("inlineCode",{parentName:"li"},"'muuri-item-placeholder'"),"."),Object(i.b)("li",{parentName:"ul"},"Accepted types: string.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),'<MuuriComponent itemPlaceholderClass={"foo-item-placeholder"} />\n')),Object(i.b)("h2",{id:"event-props-\ufe0f"},"Event props \u2699\ufe0f"),Object(i.b)("p",null,"All the ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/haltu/muuri#grid-events"}),"events")," can be listened through the ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"../usage/muuri"}),"Muuri instance"),". Some events can also be listened through the MuuriComponent props for convenience."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#onSend"}),"onSend")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#ref"}),"onDragStart")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#id"}),"onDragEnd")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#groupIds"}),"onFilter")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#gridProps"}),"onSort")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#onMount"}),"onMount")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#onUnmount"}),"onUnmount"))),Object(i.b)("hr",null),Object(i.b)("h3",{id:"onsend"},"onSend"),Object(i.b)("p",null,"A function called when an Item is transferred from a MuuriComponent to another, if your project use this functionality then it is mandatory to use this property to synchronize the state of the Items with the change. The function will receive the information about the event as its argument as shown in the example above. See more ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"../usage/reparenting"}),"here"),"."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Accepted types: ",Object(i.b)("inlineCode",{parentName:"li"},"function"),".")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Arguments")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"payload.key")," ","\xa0","\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"string"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"The key of the transferred Item."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"payload.fromId")," ","\xa0","\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"string"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"The id of the old MuuriComponent."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"payload.fromIndex")," ","\xa0","\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"number"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"The index of the Item in the old MuuriComponent."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"payload.fromGroupIds")," ","\xa0","\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"string[]"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"The group ids of the old MuuriComponent."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"payload.fromGrid")," ","\xa0","\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"Muuri"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"The old Muuri instance."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"payload.toId")," ","\xa0","\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"string"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"The id of the new MuuriComponent."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"payload.toIndex")," ","\xa0","\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"number"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"The index of the Item in the new MuuriComponent."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"payload.toGroupIds")," ","\xa0","\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"string[]"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"The group ids of the new MuuriComponent."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"payload.toGrid")," ","\xa0","\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"Muuri"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"The new Muuri instance.")))),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"const [items, setItems] = useState([]);\n\n<MuuriComponent\n  onSend={function ({\n    // The key of the transferred item.\n    key,\n    // The id of the old MuuriComponent.\n    fromId,\n    // The id of the new MuuriComponent.\n    toId\n  }) {\n    // Sync the state.\n  }}\n/>;\n")),Object(i.b)("h3",{id:"ondragstart"},"onDragStart"),Object(i.b)("p",null,"Triggered when ",Object(i.b)("inlineCode",{parentName:"p"},"dragging")," of an Item begins."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Accepted types: ",Object(i.b)("inlineCode",{parentName:"li"},"function"),".")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Arguments")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"item")," ","\xa0","\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"Muuri.Item"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"The dragged Item."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"event")," ","\xa0","\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"object"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Muuri.Dragger event data.")))),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"<MuuriComponent\n  onDragStart={function (item, event) {\n    console.log(\n      item.getKey(),\n      item.getData(),\n      item.getGrid(),\n      item.getElement()\n    );\n  }}\n/>\n")),Object(i.b)("h3",{id:"ondragend"},"onDragEnd"),Object(i.b)("p",null,"Triggered when ",Object(i.b)("inlineCode",{parentName:"p"},"dragging")," of an Item ends."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Accepted types: ",Object(i.b)("inlineCode",{parentName:"li"},"function"),".")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Arguments")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"item")," ","\xa0","\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"Muuri.Item"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"The dragged Item.")))),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"<MuuriComponent\n  onDragEnd={function (item) {\n    console.log(\n      item.getKey(),\n      item.getData(),\n      item.getGrid(),\n      item.getElement()\n    );\n  }}\n/>\n")),Object(i.b)("h3",{id:"onfilter"},"onFilter"),Object(i.b)("p",null,"Triggered when the ",Object(i.b)("inlineCode",{parentName:"p"},"filter")," is applied."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Accepted types: ",Object(i.b)("inlineCode",{parentName:"li"},"function"),".")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Arguments")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"shownItems")," ","\xa0","\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"array"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"The Items that are shown."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"hiddenItems")," ","\xa0","\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"array"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"The Items that are hidden.")))),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"<MuuriComponent\n  onDragEnd={function (shownItems, hiddenItems) {\n    console.log(shownItems);\n    console.log(hiddenItems);\n  }}\n/>\n")),Object(i.b)("h3",{id:"onsort"},"onSort"),Object(i.b)("p",null,"Triggered when the ",Object(i.b)("inlineCode",{parentName:"p"},"sort")," is applied."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Accepted types: ",Object(i.b)("inlineCode",{parentName:"li"},"function"),".")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Arguments")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"currentOrder")," ","\xa0","\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"array"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"All Items in their current order."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"previousOrder")," ","\xa0","\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"array"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"All Items in their previous order.")))),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"<MuuriComponent\n  onDragEnd={function (currentOrder, previousOrder) {\n    console.log(currentOrder);\n    console.log(previousOrder);\n  }}\n/>\n")),Object(i.b)("h3",{id:"onmount"},"onMount"),Object(i.b)("p",null,"A function that will be called when the component will mount, it receive the Muuri instance as argument."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Accepted types: ",Object(i.b)("inlineCode",{parentName:"li"},"function"),".")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Arguments")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"grid")," ","\xa0","\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"Muuri"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"The internal Muuri instance.")))),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"<MuuriComponent onMount={function (muuri) {}} />\n")),Object(i.b)("h3",{id:"onunmount"},"onUnmount"),Object(i.b)("p",null,"A function that will be called when the component will mount, it receive the Muuri instance as argument."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Accepted types: ",Object(i.b)("inlineCode",{parentName:"li"},"function"),".")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Arguments")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"grid")," ","\xa0","\u2014","\xa0"," ",Object(i.b)("em",{parentName:"li"},"Muuri"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"The internal Muuri instance.")))),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"<MuuriComponent onUnmount={function (grid) {}} />\n")))}u.isMDXComponent=!0},143:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return d}));var n=a(0),l=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function b(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var c=l.a.createContext({}),u=function(e){var t=l.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):b({},t,{},e)),a},p=function(e){var t=u(e.components);return l.a.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return l.a.createElement(l.a.Fragment,{},t)}},m=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,r=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(a),m=n,d=p["".concat(r,".").concat(m)]||p[m]||s[m]||i;return a?l.a.createElement(d,b({ref:t},c,{components:a})):l.a.createElement(d,b({ref:t},c))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,r=new Array(i);r[0]=m;var b={};for(var o in t)hasOwnProperty.call(t,o)&&(b[o]=t[o]);b.originalType=e,b.mdxType="string"==typeof e?e:n,r[1]=b;for(var c=2;c<i;c++)r[c]=a[c];return l.a.createElement.apply(null,r)}return l.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"}}]);